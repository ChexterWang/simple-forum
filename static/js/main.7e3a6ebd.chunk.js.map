{"version":3,"sources":["commons/auth/index.js","commons/auth/PrivateRoute.js","models/index.js","commons/storage/index.js","commons/api/index.js","app/PostList/util.js","app/PostList/PostListItem.js","app/PostList/EditTags.js","app/PostList/EditPost.js","app/PostList/PostList.js","app/Login/Login.js","app/PostList/ReadPostItem.js","app/PostList/ReadPost.js","app/Components/Nav.js","app/App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","PrivateRoute","Component","component","rest","currentUser","location","useLocation","to","pathname","state","referer","PostItem","_id","title","content","author","tags","createdAt","updatedAt","rating","this","Post","answers","comments","User","username","isAdmin","Storage","key","value","storage","setItem","getItem","window","localStorage","api","axios","create","baseURL","interceptors","request","use","config","headers","get","Sessions","password","post","then","res","user","data","token","Posts","offset","limit","map","j","put","_aid","delete","getTimeString","time","normal","t","Date","ret","getFullYear","getMonth","getDate","getHours","getMinutes","useStyles","makeStyles","theme","root","borderTop","flex","textAlign","container","marginLeft","spacing","textDecoration","tag","margin","tagBtn","fontSize","padding","marginRight","PostListItem","useState","isHovered","setHovered","classes","ListItem","className","ListItemText","primary","secondary","displayName","onMouseEnter","e","onMouseLeave","onMouseDown","v","i","Button","variant","Link","id","EditTags","setTags","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","input","useRef","editInput","useEffect","current","focus","handleInputConfirm","indexOf","handleEditInputChange","target","handleEditInputConfirm","newTags","saveEditInputRef","index","ref","size","onChange","onBlur","onPressEnter","isLongTag","length","tagElem","closable","onClose","removedTag","filter","handleClose","onDoubleClick","preventDefault","slice","type","onClick","PlusOutlined","dialogWrapper","position","top","width","maxWidth","dialogTitle","display","dialogTitleText","dialogContent","postTitle","postContent","marginTop","postTags","preview","wordBreak","EditPost","isAdd","isPost","postId","open","setOpen","setReload","setTitle","setContent","setPreview","redirect","setRedirect","handlePublish","a","console","log","handleDelete","Dialog","paper","DialogTitle","IconButton","Typography","DialogContent","TextField","label","multiline","rows","InputProps","startAdornment","FormControlLabel","control","Switch","checked","remarkPlugins","gfm","children","paddingTop","max","text","list","marginBottom","grow","flexGrow","PostList","posts","setPosts","openEdit","setOpenEdit","reload","fetch","color","List","el","Fragment","height","justifyContent","card","errtext","palette","error","main","btn","Login","withRouter","history","setCurrentUser","setUsername","rawPassword","setRawPassword","message","setMessage","JSON","parse","push","set","stringify","Box","Paper","split","sidebar","minWidth","info","commentList","comment","borderBottom","addComment","ReadPostItem","handleEdit","setComment","InputBase","placeholder","header","ReadPost","setPost","ans","setAns","editPost","setEditPost","setIsPost","setIsAdd","useParams","catch","handleOpenEdit","add","setSearch","search","borderRadius","shape","backgroundColor","fade","common","white","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","login","Nav","AppBar","Toolbar","noWrap","autoFocus","inputProps","App","Provider","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAGaA,EAAcC,yBAAc,GAElC,SAASC,IACd,OAAOC,qBAAWH,G,6CCaLI,MAff,YAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,iBAC/CC,EAAgBN,IAAhBM,YACFC,EAAWC,cAEjB,OACE,cAAC,IAAD,2BAAWH,GAAX,aAEoB,OAAhBC,EACE,cAACH,EAAD,IACA,cAAC,IAAD,CAAUM,GAAI,CAAEC,SAAU,IAAKC,MAAO,CAAEC,QAASL,U,0BCZ9CM,EACX,cAAkF,IAApEC,EAAmE,EAAnEA,IAAKC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OAAU,oBAC/EC,KAAKR,IAAMA,EACXQ,KAAKP,MAAQA,EACbO,KAAKN,QAAUA,EACfM,KAAKD,OAASA,EACdC,KAAKL,OAASA,EACdK,KAAKJ,KAAOA,EACZI,KAAKF,UAAYA,EACjBE,KAAKH,UAAYA,GAIRI,EACX,cAAqG,IAAvFT,EAAsF,EAAtFA,IAAKC,EAAiF,EAAjFA,MAAOC,EAA0E,EAA1EA,QAASQ,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,SAAUJ,EAA8C,EAA9CA,OAAQH,EAAsC,EAAtCA,KAAMD,EAAgC,EAAhCA,OAAQE,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,UAAa,oBAClGE,KAAKR,IAAMA,EACXQ,KAAKP,MAAQA,EACbO,KAAKN,QAAUA,EACfM,KAAKE,QAAUA,EACfF,KAAKG,SAAWA,EAChBH,KAAKD,OAASA,EACdC,KAAKJ,KAAOA,EACZI,KAAKL,OAASA,EACdK,KAAKH,UAAYA,EACjBG,KAAKF,UAAYA,GAIRM,EACX,cAA0C,IAA5BZ,EAA2B,EAA3BA,IAAKa,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,QAAY,oBACvCN,KAAKR,IAAMA,EACXQ,KAAKK,SAAWA,EAChBL,KAAKM,QAAUA,G,SChCNC,EAAb,wFAGE,SAAWC,EAAKC,GACdT,KAAKU,QAAQC,QAAQH,EAAKC,KAJ9B,iBAOE,SAAWD,EAAKC,GACd,OAAOT,KAAKU,QAAQE,QAAQJ,IAAQC,MARxC,KAAaF,EACJG,QAAUG,OAAOC,aCW1B,IAAMC,EAAMC,IAAMC,OAAO,CACvBC,QATc,yCAahBH,EAAII,aAAaC,QAAQC,KAAI,SAAAC,GAE3B,OADAA,EAAOC,QAXA,CACL,cAAiB,UAAYhB,EAAQiB,IAAI,UAWpCF,KAGF,IAAMG,EAAW,SACXpB,EAAUqB,GACnB,OAAOX,EAAIY,KAAK,YAAa,CAAEtB,WAAUqB,aAAYE,MAAK,SAAAC,GAAG,MAAK,CAChEC,KAAM,IAAI1B,EAAKyB,EAAIE,KAAKD,MACxBE,MAAOH,EAAIE,KAAKC,WAKTC,EAAQ,WACwB,IAAD,yDAAJ,GAAI,IAA/BC,cAA+B,MAAtB,EAAsB,MAAnBC,aAAmB,MAAX,GAAW,EACxC,OAAOpB,EAAIS,IAAJ,wBAAyBU,EAAzB,kBAAyCC,IAASP,MAAK,SAAAC,GAAG,OAAIA,EAAIE,KAAKK,KAAI,SAAAC,GAAC,OAAI,IAAI9C,EAAS8C,UAF3FJ,EAAQ,SAIXzC,GACN,OAAOuB,EAAIS,IAAI,UAAUhC,GAAKoC,MAAK,SAAAC,GAAG,OAAI,IAAI5B,EAAK4B,EAAIE,UAL9CE,EAAQ,SAOXxC,EAAOC,EAASE,GACtB,OAAOmB,EAAIY,KAAK,SAAU,CAAElC,QAAOC,UAASE,UARnCqC,EAAQ,SAUTzC,EAAKE,GACb,OAAOqB,EAAIY,KAAK,UAAUnC,EAAI,WAAY,CAAEE,aAXnCuC,EAAQ,SAaVzC,EAAKC,EAAOC,EAASE,GAC5B,OAAOmB,EAAIuB,IAAI,UAAU9C,EAAK,CAAEC,QAAOC,UAASE,UAdvCqC,EAAQ,SAgBRzC,EAAK+C,EAAM7C,GACpB,OAAOqB,EAAIuB,IAAI,UAAU9C,EAAI,YAAY+C,EAAM,CAAE7C,aAjBxCuC,EAAQ,SAmBRzC,GACT,OAAOuB,EAAIyB,OAAO,UAAUhD,I,oCCpD1BiD,EAAgB,SAACC,GAAuB,IAAjBC,IAAgB,yDACrCC,EAAI,IAAIC,KAAKH,GACbI,EAAMF,EAAEG,cAWZ,OAVAD,GAAQH,EAAU,IAAM,KACxBG,GAAQF,EAAEI,WAAa,GAAM,IAAM,GACnCF,GAAOF,EAAEI,WACTF,GAAQH,EAAU,IAAM,KACxBG,GAAQF,EAAEK,UAAY,GAAM,IAAM,GAClCH,GAAOF,EAAEK,UAAY,IACrBH,GAAQF,EAAEM,WAAa,GAAM,IAAM,GACnCJ,GAAOF,EAAEM,WAAa,IACtBJ,GAAQF,EAAEO,aAAe,GAAM,IAAM,GACrCL,GAAOF,EAAEO,cCJPC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,UAAW,kBAEfzD,OAAQ,CACJ0D,KAAM,UACNC,UAAW,UAEfC,UAAW,CACPF,KAAM,WACNG,WAAYN,EAAMO,QAAQ,IAE9BpE,MAAO,CACHqE,eAAgB,QAEpBC,IAAK,CACDC,OAAQ,SAEZC,OAAQ,CACJC,SAAU,SACVC,QAAS,UACTC,YAAad,EAAMO,QAAQ,SAIpB,SAASQ,EAAT,GAAoC,IAAD,EAAX3E,EAAW,EAAXA,QAEnC,EAAgC4E,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAUrB,IAEhB,OACI,mCACI,eAACsB,EAAA,EAAD,CAAUC,UAAWF,EAAQlB,KAA7B,UACI,cAACqB,EAAA,EAAD,CAAcD,UAAWF,EAAQ1E,OAAQ8E,QAASnF,EAAQK,SAC1D,sBAAK4E,UAAWF,EAAQd,UAAxB,UACI,cAACiB,EAAA,EAAD,CACID,UAAWF,EAAQ9C,KAAMkD,QACpB,cAAC,IAAD,CAAMF,UAAWF,EAAQhF,MAAON,GAAI,kBAAUO,QAAV,IAAUA,OAAV,EAAUA,EAASF,KAAvD,gBAA6DE,QAA7D,IAA6DA,OAA7D,EAA6DA,EAASD,QAE3EqF,UAAW,MAAQpF,EAAQC,OAAOoF,YAAc,gBAAkBtC,EAAc/C,EAAQI,WAAYyE,GACpGS,aAAc,SAACC,GAAKT,GAAW,IAC/BU,aAAc,SAACD,GAAKT,GAAW,IAC/BW,YAAa,SAACF,GAAKT,GAAYD,MAEnC,qBAAKI,UAAWF,EAAQV,IAAxB,mBACKrE,EAAQE,YADb,aACK,EAAcwC,KAAI,SAACgD,EAAGC,GACnB,OACI,cAACC,EAAA,EAAD,CAEIC,QAAQ,WACRZ,UAAWF,EAAQR,OACnBnF,UAAW0G,IAAMrG,GAAI,SAASiG,EAJlC,SAKEA,GAJO,mBAAW1F,QAAX,IAAWA,OAAX,EAAWA,EAAS+F,IAAG,IAAIJ,gB,4PCpDvDK,GAAW,SAAC,GAAuB,IAAD,IAApB9F,EAAoB,EAApBA,KAAM+F,EAAc,EAAdA,QAC7B,EAAwCrB,oBAAS,GAAjD,mBAAOsB,EAAP,KAAqBC,EAArB,KACA,EAAoCvB,mBAAS,IAA7C,mBAAOwB,EAAP,KAAmBC,EAAnB,KACA,EAA4CzB,oBAAU,GAAtD,mBAAO0B,EAAP,KAAuBC,EAAvB,KACA,EAA4C3B,mBAAS,IAArD,mBAAO4B,EAAP,KAAuBC,EAAvB,KACMC,EAAQC,iBAAO,MACfC,EAAYD,iBAAO,MAEzBE,qBAAU,WACHX,GAAcQ,EAAMI,QAAQC,UAChC,CAACb,IAEJW,qBAAU,YACiB,IAApBP,GAAuBM,EAAUE,QAAQC,UAC7C,CAACT,IAEJ,IAcMU,EAAqB,WACnBZ,IAA4C,IAA9BlG,EAAK+G,QAAQb,KAC3BlG,EAAI,uBAAOA,GAAP,CAAakG,KAGrBH,EAAQ/F,GACRiG,GAAgB,GAChBE,EAAc,KAGZa,EAAwB,SAAA3B,GAC1BkB,EAAkBlB,EAAE4B,OAAOpG,QAGzBqG,EAAyB,WAC3B,IAAMC,EAAO,aAAOnH,GACpBmH,EAAQf,GAAkBE,EAC1BP,EAAQoB,GACRd,GAAmB,GACnBE,EAAkB,KAOhBa,EAAmB,SAAA3B,GACrBiB,EAAUE,QAAUnB,GAGxB,OACI,+CACCzF,SADD,aACC,EAAMwC,KAAI,SAAC2B,EAAKkD,GACb,GAAIjB,IAAmBiB,EACrB,OACE,cAAC,KAAD,CACIC,IAAKF,EAELG,KAAK,QACLxC,UAAU,YACVlE,MAAOyF,EACPkB,SAAUR,EACVS,OAAQP,EACRQ,aAAcR,GANT/C,GAWb,IAAMwD,EAAYxD,EAAIyD,OAAS,GAEzBC,EACF,cAAC,KAAD,CACI9C,UAAU,WAEV+C,UAAU,EACVC,QAAS,kBArEL,SAAAC,GAChB,IAAMb,EAAUnH,EAAKiI,QAAO,SAAA9D,GAAG,OAAIA,IAAQ6D,KAE3CjC,EAAQoB,GAkEmBe,CAAY/D,IAJ/B,SAMI,sBACIgE,cAAe,SAAA9C,GACXkB,EAAkBpC,GAClBkC,EAAkBgB,GAClBhC,EAAE+C,kBAJV,SAOKT,EAAS,UAAMxD,EAAIkE,MAAM,EAAG,IAAnB,OAA8BlE,KAXvCA,GAeb,OAAOwD,EACH,cAAC,KAAD,CAAS9H,MAAOsE,EAAhB,SACK0D,GADqB1D,GAI1B0D,KAGP7B,GACG,cAAC,KAAD,CACIsB,IAxDS,SAAA7B,GACjBe,EAAMI,QAAUnB,GAwDR6C,KAAK,OACLf,KAAK,QACLxC,UAAU,YACVlE,MAAOqF,EACPsB,SAvFc,SAAAnC,GACtBc,EAAcd,EAAE4B,OAAOpG,QAuFf4G,OAAQX,EACRY,aAAcZ,KAGpBd,IAAqB,QAAJ,EAAAhG,SAAA,eAAM4H,QAAS,GAC9B,eAAC,KAAD,CAAK7C,UAAU,gBAAgBwD,QAjGrB,WACdtC,GAAgB,IAgGZ,UACI,cAACuC,GAAA,EAAD,IADJ,kBC/GNhF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+E,cAAe,CACXlE,QAASb,EAAMO,QAAQ,GACvByE,SAAU,WACVC,IAAK,IACLC,MAAO,OACPC,SAAU,SAEdC,YAAa,CACTC,QAAS,QAEbC,gBAAiB,CACbnF,KAAM,WACNU,QAASb,EAAMO,QAAQ,EAAG,IAE9BgF,cAAe,CACX7E,OAAQ,SACRG,QAASb,EAAMO,QAAQ,EAAG,IAE9BiF,UAAW,CACPN,MAAO,QAEXO,YAAa,CACTP,MAAO,OACPQ,UAAW1F,EAAMO,QAAQ,IAE7BoF,SAAU,CACN,gCAAiC,CAC7BN,QAAS,QAEb,UAAW,CACPA,QAAS,QACTxE,QAASb,EAAMO,QAAQ,IAE3B2E,MAAO,OACPQ,UAAW1F,EAAMO,QAAQ,IAE7BqF,QAAS,CACLhF,SAAU,QACViF,UAAW,kBAWNC,GAAW,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,OAAQ5H,EAAqC,EAArCA,KAAM6H,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACnE,EAA0BpF,mBAAS,IAAnC,mBAAO7E,EAAP,KAAckK,EAAd,KACA,EAA8BrF,mBAAS,IAAvC,mBAAO5E,EAAP,KAAgBkK,EAAhB,KACA,EAA8BtF,oBAAS,GAAvC,mBAAO4E,EAAP,KAAgBW,EAAhB,KACA,EAAwBvF,mBAAS,IAAjC,mBAAO1E,EAAP,KAAa+F,EAAb,KACA,EAAgCrB,oBAAS,GAAzC,mBAAOwF,EAAP,KAAiBC,EAAjB,KACMtF,EAAUrB,KAEhBmD,qBAAU,WACH5E,IACCgI,EAAShI,EAAKlC,OACdmK,EAAWjI,EAAKjC,SAChBiG,EAAQhE,EAAK/B,SAElB,CAAC+B,IAEJ4E,qBAAU,WACH8C,IACCM,EAAS,IACTC,EAAW,IACXjE,EAAQ,OAEb,CAAC0D,IAEJ,IAAMW,EAAa,uCAAG,sBAAAC,EAAA,mEAEXZ,EAFW,qBAGPC,EAHO,gCAGOrH,EAAcxC,EAAOC,EAASE,GAHrC,6CAICqC,EAAgBsH,EAAQ7J,GAJzB,mCAOP4J,EAPO,kCAOOrH,EAAeN,EAAKnC,IAAKC,EAAOC,EAASE,GAPhD,iDAQCqC,EAAiBsH,EAAQ5H,EAAKnC,IAAKE,GARpC,0DAWdwK,QAAQC,IAAR,MAXc,QAalBV,GAAQ,GACRC,GAAU,GAdQ,0DAAH,qDAiBbU,EAAY,uCAAG,sBAAAH,EAAA,mEAEVX,EAFU,gCAGHrH,EAAiBsH,GAHd,OAITQ,GAAY,GAJH,uDAQbG,QAAQC,IAAR,MARa,yDAAH,qDAYlB,OACI,mCACI,eAACE,EAAA,EAAD,CAAQb,KAAMA,EAAMf,SAAS,KAAKhE,QAAS,CAAE6F,MAAO7F,EAAQ4D,eAA5D,UACI,cAACkC,EAAA,EAAD,UACI,sBAAK5F,UAAWF,EAAQiE,YAAxB,UACI,cAAC8B,EAAA,EAAD,CAAYrC,QAAS,WAAOsB,GAAQ,IAApC,SACI,cAAC,IAAD,CAAkBvF,SAAS,YAE/B,eAACuG,EAAA,EAAD,CAAYlF,QAAQ,KAAKzG,UAAU,MAAM6F,UAAWF,EAAQmE,gBAA5D,UACKS,GAASC,GAAU,WACnBD,IAAUC,GAAU,SACnBD,GAASC,GAAU,aACnBD,IAAUC,GAAU,iBAEzBQ,GACG,cAAC,IAAD,CAAU3K,GAAG,YAEfkK,GACE,cAACmB,EAAA,EAAD,CAAYrC,QAASiC,EAArB,SACI,cAAC,KAAD,MAGR,cAACI,EAAA,EAAD,CAAYrC,QAAS6B,EAArB,SACI,cAAC,KAAD,WAIZ,cAACU,EAAA,EAAD,UACI,sBAAK/F,UAAWF,EAAQoE,cAAxB,UACKS,GACG,cAACqB,EAAA,EAAD,CACIlK,MAAOhB,EACPmL,MAAM,QACNrF,QAAQ,WACRZ,UAAWF,EAAQqE,UACnB1B,SAAU,SAACnC,GAAD,OAAO0E,EAAS1E,EAAE4B,OAAOpG,UAE3C,cAACkK,EAAA,EAAD,CACIlK,MAAOf,EACPkL,MAAM,UACNrF,QAAQ,WACRsF,WAAS,EACTC,KAAM,GACNnG,UAAW2E,EAAS7E,EAAQsE,YAActE,EAAQqE,UAClD1B,SAAU,SAACnC,GAAD,OAAO2E,EAAW3E,EAAE4B,OAAOpG,UACxC6I,GACG,cAACqB,EAAA,EAAD,CACIlK,MAAM,IACNmK,MAAM,OACNrF,QAAQ,WACRwF,WAAY,CAAEC,eAAgB,cAAC,GAAD,CAAUpL,KAAMA,EAAM+F,QAASA,KAC7DhB,UAAWF,EAAQwE,WAE3B,cAACgC,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASlC,EAAS9B,SAAU,SAAAnC,GAAC,OAAI4E,GAAYX,MAC9D0B,MAAM,YAEV,qBAAKjG,UAAWF,EAAQyE,QAAxB,SACKA,EACG,cAAC,KAAD,CAAemC,cAAe,CAACC,MAAMC,SAAU7L,IAC/C,gB,+BCrK1B0D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJiF,MAAO,OACPgD,WAAY,QAEdC,IAAK,CACHjD,MAAO,OACPC,SAAU,QACVzE,OAAQ,UAEVvE,MAAO,CACLkJ,QAAS,QAEX+C,KAAM,CACJvH,QAASb,EAAMO,QAAQ,EAAE,GACzBJ,KAAM,YAERkI,KAAM,CACJC,aAActI,EAAMO,QAAQ,IAE9BgI,KAAM,CACJC,SAAU,OAIDC,GAAW,WACtB,MAA0BzH,mBAAS,IAAnC,mBAAO0H,EAAP,KAAcC,EAAd,KACA,EAAgC3H,oBAAS,GAAzC,mBAAO4H,EAAP,KAAiBC,EAAjB,KACA,EAA4B7H,oBAAS,GAArC,mBAAO8H,EAAP,KAAe1C,EAAf,KAEM2C,EAAQ,WACZpK,IAAiBL,KAAKqK,IAGxB1F,qBAAU,WACR8F,MACC,IAEH9F,qBAAU,WACR8F,IACGD,GAAQ1C,GAAU,KACpB,CAAC0C,IAEJ,IAAM3H,EAAUrB,KAEhB,OACE,sBAAKuB,UAAWF,EAAQlB,KAAxB,UACE,cAAC,GAAD,CACE8F,OAAO,EAAMC,QAAQ,EAAME,KAAM0C,EACjCzC,QAAS0C,EAAazC,UAAWA,IACnC,sBAAK/E,UAAWF,EAAQgH,IAAxB,UACE,sBAAK9G,UAAWF,EAAQhF,MAAxB,UACE,cAACgL,EAAA,EAAD,CAAY9F,UAAWF,EAAQiH,KAAMnG,QAAQ,KAAKoD,QAAQ,SAA1D,uBAGA,cAAC6B,EAAA,EAAD,CACEjF,QAAQ,YACR4C,QAAS,kBAAMgE,GAAY,IAC3BG,MAAM,UAHR,SAIE,cAAC,KAAD,SAGJ,cAACC,GAAA,EAAD,CAAM5H,UAAWF,EAAQkH,KAAzB,SACGK,EAAM5J,KAAI,SAACoK,EAAInH,GAAL,OACT,cAAC,IAAMoH,SAAP,UACE,cAACpI,EAAD,CAAc3E,QAAS8M,KADJ,OAAOnH,e,oBC9DlCjC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJmJ,OAAQ,qBACR/D,QAAS,OACTgE,eAAgB,UAElBC,KAAM,CACJ5I,OAAQ,OACRyE,SAAU,QACVtE,QAASb,EAAMO,QAAQ,EAAG,IAE5B6H,KAAM,CACJlD,MAAO,OACPoD,aAActI,EAAMO,QAAQ,IAE9BgJ,QAAS,CACPjB,aAActI,EAAMO,QAAQ,GAC5ByI,MAAOhJ,EAAMwJ,QAAQC,MAAMC,MAE7BC,IAAK,CACHzE,MAAO,YAIE0E,GAAQC,aAAW,YAA4B,IAAD,EAAxBC,EAAwB,EAAxBA,QAASnO,EAAe,EAAfA,SAClCoO,EAAmB3O,IAAnB2O,eACF/N,GAAkB,OAARL,QAAQ,IAARA,GAAA,UAAAA,EAAUI,aAAV,eAAiBC,UAAW,SAC5C,EAAgCgF,mBAAS,IAAzC,mBAAOjE,EAAP,KAAiBiN,EAAjB,KACA,EAAsChJ,mBAAS,IAA/C,mBAAOiJ,EAAP,KAAoBC,EAApB,KACA,EAA8BlJ,mBAAS,IAAvC,mBAAOmJ,EAAP,KAAgBC,EAAhB,KACMjJ,EAAUrB,KAEhBmD,qBAAU,WAER,GADchG,EAAQiB,IAAI,SACf,CACT,IAAMM,EAAO6L,KAAKC,MAAMrN,EAAQiB,IAAI,SAEpC6L,EAAevL,GAEfsL,EAAQS,KAAKvO,OAIjB,IAAM6I,EAAO,uCAAG,gCAAA8B,EAAA,6DACdyD,EAAW,IADG,kBAGkBjM,EAAoBpB,EAAUkN,GAHhD,gBAGJzL,EAHI,EAGJA,KAAME,EAHF,EAGEA,MAEdzB,EAAQuN,IAAI,OAAQH,KAAKI,UAAUjM,IACnCvB,EAAQuN,IAAI,QAAS9L,GACrBqL,EAAevL,GAEfsL,EAAQS,KAAKvO,GATD,kDAYZoO,EAAW,iCAZC,0DAAH,qDAgBb,OACE,cAACM,GAAA,EAAD,CAAKrJ,UAAWF,EAAQlB,KAAxB,SACE,eAAC0K,GAAA,EAAD,CAAO1I,QAAQ,WAAWZ,UAAWF,EAAQmI,KAA7C,UACE,cAACnC,EAAA,EAAD,CAAYlF,QAAQ,KAAKZ,UAAWF,EAAQiH,KAA5C,0BACA,cAACjB,EAAA,EAAD,CAAYlF,QAAQ,KAAKZ,UAAWF,EAAQiH,KAA5C,sFACA,cAACf,EAAA,EAAD,CACEpF,QAAQ,WACRZ,UAAYF,EAAQiH,KACpBd,MAAQ,WACRnK,MAAQJ,EACR+G,SAAU,SAACnC,GAAD,OAAOqI,EAAYrI,EAAE4B,OAAOpG,UACxC,cAACkK,EAAA,EAAD,CACEpF,QAAQ,WACRZ,UAAYF,EAAQiH,KACpBd,MAAQ,WACRnK,MAAQ8M,EACRrF,KAAK,WACLd,SAAU,SAACnC,GAAD,OAAOuI,EAAevI,EAAE4B,OAAOpG,UAC3C,cAACgK,EAAA,EAAD,CAAYlF,QAAQ,QAAQZ,UAAWF,EAAQoI,QAA/C,SAAyDY,IACzD,cAACnI,EAAA,EAAD,CACEC,QAAQ,YACR+G,MAAM,UACN3H,UAAYF,EAAQwI,IACpB9E,QAAUA,EAJZ,6B,8FC/EF/E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,UAAW,iBACXwF,UAAW1F,EAAMO,QAAQ,GACzBK,SAAU,SAEdgK,MAAO,CACHvF,QAAS,QAEbwF,QAAS,CACL3F,MAAO,QAEXzI,OAAQ,CACJ2D,UAAW,UAEfhE,QAAS,CACL+D,KAAM,WACN2K,SAAU,IACVpK,OAAQV,EAAMO,QAAQ,IAE1BwK,KAAM,CACF3K,UAAW,QACXM,OAAQV,EAAMO,QAAQ,EAAG,IAE7ByK,YAAY,CACR9K,UAAW,kBAEf+K,QAAS,CACLC,aAAc,iBACdrK,QAASb,EAAMO,QAAQ,GAAK,EAAG,EAAG,IAEtC/B,KAAM,CACFgC,eAAgB,OAChB6E,QAAS,gBAEb8F,WAAY,CACRjG,MAAO,OACP,WAAY,CACRgG,aAAc,uBAKbE,GAAe,SAAC,GAA0B,IAAD,MAAvB/M,EAAuB,EAAvBA,KAAMgN,EAAiB,EAAjBA,WACjC,EAA8BrK,mBAAS,IAAvC,mBAAOiK,EAAP,KAAgBK,EAAhB,KACMnK,EAAUrB,KAChB,OACI,qBAAKuB,UAAWF,EAAQlB,KAAxB,SACI,sBAAKoB,UAAWF,EAAQyJ,MAAxB,UACI,sBAAKvJ,UAAWF,EAAQ0J,QAAxB,UACI,cAAC3D,EAAA,EAAD,UAAY,cAAC,KAAD,MACZ,qBAAK7F,UAAWF,EAAQ1E,OAAxB,gBAAiC4B,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAM5B,SACvC,cAACyK,EAAA,EAAD,UAAY,cAAC,KAAD,MACZ,cAACA,EAAA,EAAD,CAAYrC,QAASwG,EAArB,SAAiC,cAAC,KAAD,SAErC,sBAAKhK,UAAWF,EAAQ/E,QAAxB,UACI,cAAC,KAAD,CAAe2L,cAAe,CAACC,MAAMC,SAAQ,OAAE5J,QAAF,IAAEA,OAAF,EAAEA,EAAMjC,UACrD,sBAAKiF,UAAWF,EAAQ4J,KAAxB,UACK,MACD,cAAC,IAAD,CAAM1J,UAAWF,EAAQ3C,KAAM3C,GAAI,kBAAUwC,QAAV,IAAUA,GAAV,UAAUA,EAAMhC,cAAhB,aAAU,EAAcH,KAA3D,gBAAiEmC,QAAjE,IAAiEA,GAAjE,UAAiEA,EAAMhC,cAAvE,aAAiE,EAAcoF,cAC9E,gBAAkBtC,EAAa,OAACd,QAAD,IAACA,OAAD,EAACA,EAAM7B,cAE3C,sBAAK6E,UAAWF,EAAQ6J,YAAxB,iBACK3M,QADL,IACKA,GADL,UACKA,EAAMxB,gBADX,aACK,EAAgBiC,KAAI,SAAAoK,GAAE,aACnB,sBAAK7H,UAAWF,EAAQ8J,QAAxB,UACI,cAAC,IAAD,CAAM5J,UAAWF,EAAQ3C,KAAM3C,GAAI,UAAUqN,EAAG7M,OAAOH,IAAvD,gBAA6DgN,QAA7D,IAA6DA,GAA7D,UAA6DA,EAAI7M,cAAjE,aAA6D,EAAYoF,cACxE,aAAKyH,QAAL,IAAKA,OAAL,EAAKA,EAAI9M,eAGlB,cAACmP,GAAA,EAAD,CACIhE,WAAS,EACTlG,UAAWF,EAAQgK,WACnBK,YAAY,mBAAmBrO,MAAO8N,EACtCnH,SAAU,SAACnC,GAAD,OAAK2J,EAAW3J,EAAE4B,OAAOpG,sBCxEzD2C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFiI,WAAYlI,EAAMO,QAAQ,IAE9BF,UAAW,CACP8E,SAAU,QACVzE,OAAQ,UAEZ+K,OAAQ,CACJpG,QAAS,QAEbG,UAAW,CACP3E,QAASb,EAAMO,QAAQ,EAAG,GAC1BJ,KAAM,YAEV/D,QAAS,CACLyE,QAASb,EAAMO,QAAQ,IAE3BpE,MAAO,CACHmE,WAAYN,EAAMO,QAAQ,QAIrBmL,GAAW,WACpB,MAAwB1K,mBAAS,MAAjC,mBAAO3C,EAAP,KAAasN,EAAb,KACA,EAAsB3K,mBAAS,MAA/B,mBAAO4K,EAAP,KAAYC,EAAZ,KACA,EAAgC7K,oBAAS,GAAzC,mBAAO4H,EAAP,KAAiBC,EAAjB,KACA,EAAgC7H,mBAAS,MAAzC,mBAAO8K,EAAP,KAAiBC,EAAjB,KACA,EAA4B/K,oBAAS,GAArC,mBAAOgF,EAAP,KAAegG,EAAf,KACA,EAA0BhL,oBAAS,GAAnC,mBAAO+E,EAAP,KAAckG,EAAd,KACA,EAA4BjL,oBAAS,GAArC,mBAAO8H,EAAP,KAAe1C,EAAf,KACMjF,EAAUrB,KACRqC,EAAO+J,cAAP/J,GAERc,qBAAU,WACNtE,EAAcwD,GACb7D,MAAK,SAAAC,GACFoN,EAAQpN,GACRsN,EAAOtN,EAAI3B,YAEduP,OAAM,eAKJrD,GAAQ1C,GAAU,KACtB,CAACjE,EAAI2G,IAER,IAAMsD,EAAiB,SAACzK,EAAEgC,GAAqB,IAAf0I,EAAc,wDAEvCA,GAECJ,GAAS,GACTD,GAAU,GACVD,EAAY,QAEC,IAATpI,GAEJsI,GAAS,GACTD,GAAU,GACVD,EAAY1N,KAIZ4N,GAAS,GACTD,GAAU,GACVD,EAAYH,EAAIjI,KAEpBkF,GAAY,IAGhB,OACI,mCACI,eAAC6B,GAAA,EAAD,CAAKrJ,UAAWF,EAAQlB,KAAxB,UACI,cAAC,GAAD,CACI8F,MAAOA,EAAOC,OAAQA,EAAQC,OAAM,OAAE5H,QAAF,IAAEA,OAAF,EAAEA,EAAMnC,IAC5CmC,KAAMyN,EAAU5F,KAAM0C,EAAUzC,QAAS0C,EAAazC,UAAWA,IACrE,sBAAK/E,UAAWF,EAAQd,UAAxB,UACI,sBAAKgB,UAAWF,EAAQsK,OAAxB,UACI,cAACvE,EAAA,EAAD,CAAY1L,UAAW0G,IAAMrG,GAAG,SAAhC,SACI,cAAC,IAAD,MAEJ,cAACsL,EAAA,EAAD,CAAYlF,QAAQ,KAAKZ,UAAWF,EAAQqE,UAA5C,mBAGA,cAAC0B,EAAA,EAAD,CAAYrC,QAAS,SAAAlD,GAAC,OAAIyK,EAAezK,EAAE,GAAE,IAA7C,SACI,cAAC,KAAD,SAGR,sBAAKN,UAAWF,EAAQ/E,QAAxB,UACI,cAAC+K,EAAA,EAAD,CAAYlF,QAAQ,KAAKZ,UAAWF,EAAQhF,MAA5C,gBAAoDkC,QAApD,IAAoDA,OAApD,EAAoDA,EAAMlC,QAC1D,cAAC,GAAD,CAAckC,KAAMA,EAAMgN,WAAY,SAAA1J,GAAC,OAAIyK,EAAezK,GAAG,MAFjE,OAGKiK,QAHL,IAGKA,OAHL,EAGKA,EAAK9M,KAAI,SAACoK,EAAGnH,GAAJ,OACN,cAAC,GAAD,CAA6B1D,KAAM6K,EAAImC,WAAY,SAAA1J,GAAC,OAAIyK,EAAezK,EAAEI,KAAtD,OAAOA,kB,kDC3FhDjC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJuI,SAAU,GAEZrM,MAAO,CACLqM,SAAU,EACVhI,eAAgB,QAElB8L,UAAW,CACTtD,MAAO,WAETuD,OAAQ,CACNvH,SAAU,WACVwH,aAAcxM,EAAMyM,MAAMD,aAC1BE,gBAAiBC,aAAK3M,EAAMwJ,QAAQoD,OAAOC,MAAO,KAClD,UAAW,CACTH,gBAAiBC,aAAK3M,EAAMwJ,QAAQoD,OAAOC,MAAO,MAEpD3H,MAAO,OACPxE,OAAQV,EAAMO,QAAQ,EAAG,EAAG,EAAG,IAEjCuM,WAAY,CACVjM,QAASb,EAAMO,QAAQ,EAAG,GAC1B6I,OAAQ,OACRpE,SAAU,WACV+H,cAAe,OACf1H,QAAS,OACT2H,WAAY,SACZ3D,eAAgB,UAElB4D,UAAW,CACTjE,MAAO,UACP9D,MAAO,QAETgI,WAAY,CACVrM,QAASb,EAAMO,QAAQ,EAAG,EAAG,EAAG,GAEhC4M,YAAY,cAAD,OAAgBnN,EAAMO,QAAQ,GAA9B,OACX2E,MAAO,QAETkI,MAAO,CACHpE,MAAO,eAIA,SAASqE,GAAT,GAAyB,IAAT7O,EAAQ,EAARA,KACnBuL,EAAmB3O,IAAnB2O,eACF5I,EAAUrB,KAChB,EAA4BkB,oBAAS,GAArC,mBAAOuL,EAAP,KAAeD,EAAf,KASA,OACE,qBAAKjL,UAAWF,EAAQlB,KAAxB,SACE,eAACqN,GAAA,EAAD,CAAQtI,SAAS,SAAjB,UACE,eAACuI,GAAA,EAAD,WACE,cAACpG,EAAA,EAAD,CAAY3L,UAAW0G,IAAMrG,GAAG,IAAIwF,UAAWF,EAAQhF,MAAO6M,MAAM,UAAU/G,QAAQ,KAAKuL,QAAM,EAAjG,0BAIGhP,EACC,qCACE,cAAC0I,EAAA,EAAD,CAAY7F,UAAWF,EAAQmL,UAAWzH,QAAS,SAAClD,GAAO2K,GAAWC,IAAtE,SACE,cAAC,KAAD,MAEF,cAACvK,EAAA,EAAD,CAAQxG,UAAW0G,IAAMrG,GAAG,IAC1BgJ,QArBD,WACb5H,EAAQuN,IAAI,QAAS,IACrBvN,EAAQuN,IAAI,OAAQ,IACpBT,EAAe,MACfuC,GAAU,IAkBIjL,UAAWF,EAAQiM,MAFrB,SAGK5O,EAAKzB,cAGV,MAIHwP,EAAU,CACT,cAACgB,GAAA,EAAD,UACE,sBAAKlM,UAAWF,EAAQoL,OAAxB,UACE,qBAAKlL,UAAWF,EAAQ2L,WAAxB,SACE,cAAC,KAAD,MAEF,cAACvB,GAAA,EAAD,CACEC,YAAY,eACZiC,WAAS,EACTtM,QAAS,CACPlB,KAAMkB,EAAQ8L,UACdnK,MAAO3B,EAAQ+L,YAEjBnJ,OAAQ,kBAAMuI,GAAU,IACxBoB,WAAY,CAAE,aAAc,gBAbpB,gBAiBX,Q,cC/EJC,OAtBf,WACE,MAAsC3M,mBAAS,MAA/C,mBAAOtF,EAAP,KAAoBqO,EAApB,KAEA,OACE,cAAC7O,EAAY0S,SAAb,CAAsBzQ,MAAO,CAAEzB,cAAaqO,kBAA5C,SACE,cAAC,IAAD,UACE,sBAAK1I,UAAU,MAAf,UACE,cAACgM,GAAD,CAAK7O,KAAM9C,IACX,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmS,KAAK,IAAIC,OAAK,EAACtS,UAAWoO,KACjC,cAAC,EAAD,CAAciE,KAAK,SAASC,OAAK,EAACtS,UAAWiN,KAC7C,cAAC,EAAD,CAAcoF,KAAK,aAAarS,UAAWkQ,KAC3C,cAAC,IAAD,CAAOmC,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUhS,GAAG,mBCZZkS,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3P,MAAK,YAAkD,IAA/C4P,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.7e3a6ebd.chunk.js","sourcesContent":["\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext(false);\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}","import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"./index\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {\r\n        currentUser !== null ?\r\n          <Component /> :\r\n          <Redirect to={{ pathname: '/', state: { referer: location } }} />\r\n      }\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","\r\nexport class PostItem {\r\n  constructor({ _id, title, content, author, tags, createdAt, updatedAt, rating }) {\r\n    this._id = _id;\r\n    this.title = title;\r\n    this.content = content;\r\n    this.rating = rating;\r\n    this.author = author;\r\n    this.tags = tags;\r\n    this.updatedAt = updatedAt;\r\n    this.createdAt = createdAt;\r\n  }\r\n}\r\n\r\nexport class Post {\r\n  constructor({ _id, title, content, answers, comments, rating, tags, author, createdAt, updatedAt }) {\r\n    this._id = _id;\r\n    this.title = title;\r\n    this.content = content;\r\n    this.answers = answers;\r\n    this.comments = comments;\r\n    this.rating = rating;\r\n    this.tags = tags;\r\n    this.author = author;\r\n    this.createdAt = createdAt;\r\n    this.updatedAt = updatedAt;\r\n  }\r\n}\r\n\r\nexport class User {\r\n  constructor({ _id, username, isAdmin, }) {\r\n    this._id = _id;\r\n    this.username = username;\r\n    this.isAdmin = isAdmin;\r\n  }\r\n}","\r\nexport class Storage {\r\n  static storage = window.localStorage;\r\n\r\n  static set(key, value) {\r\n    this.storage.setItem(key, value);\r\n  }\r\n\r\n  static get(key, value) {\r\n    return this.storage.getItem(key) || value;\r\n  }\r\n\r\n}","\r\nimport axios from 'axios';\r\nimport { Post, PostItem, User } from '../../models';\r\nimport { Storage } from '../storage';\r\n\r\nconst api_url = 'https://b1850f4d795e.ap.ngrok.io/api';\r\n\r\nfunction getAuthHeader() {\r\n  return {\r\n    'Authorization': 'Bearer ' + Storage.get('token'),\r\n  }\r\n}\r\n\r\nconst api = axios.create({\r\n  baseURL: api_url,\r\n  // headers: getAuthHeader(),\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  config.headers = getAuthHeader();\r\n  return config;\r\n});\r\n\r\nexport const Sessions = {\r\n  newSession(username, password) {\r\n    return api.post('/sessions', { username, password }).then(res => ({\r\n      user: new User(res.data.user),\r\n      token: res.data.token,\r\n    }));\r\n  },\r\n};\r\n\r\nexport const Posts = {\r\n  getPosts({ offset = 0, limit = 20 } = {}) {\r\n    return api.get(`/posts?offset=${offset}&limit=${limit}`).then(res => res.data.map(j => new PostItem(j)));\r\n  },\r\n  getPost(_id) {\r\n    return api.get('/posts/'+_id).then(res => new Post(res.data));\r\n  },\r\n  addPost(title, content, tags){\r\n    return api.post('/posts', { title, content, tags });\r\n  },\r\n  addAnswer(_id, content){\r\n    return api.post('/posts/'+_id+'/answers', { content });\r\n  },\r\n  editPost(_id, title, content, tags ){\r\n    return api.put('/posts/'+_id, { title, content, tags });\r\n  },\r\n  editAnswer(_id, _aid, content){\r\n    return api.put('/posts/'+_id+'/answers/'+_aid, { content });\r\n  },\r\n  deletePost(_id){\r\n    return api.delete('/posts/'+_id);\r\n  }\r\n};","const getTimeString = (time, normal=true) => {\r\n    var t = new Date(time);\r\n    var ret = t.getFullYear();\r\n    ret += (normal) ? '/' : '\\\\';\r\n    ret += (t.getMonth() < 10) ? '0' : '';\r\n    ret += t.getMonth();\r\n    ret += (normal) ? '/' : '\\\\';\r\n    ret += (t.getDate() < 10) ? '0' : '';\r\n    ret += t.getDate() + ' ';\r\n    ret += (t.getHours() < 10) ? '0' : '';\r\n    ret += t.getHours() + ':';\r\n    ret += (t.getMinutes() < 10) ? '0' : '';\r\n    ret += t.getMinutes();\r\n    return ret;\r\n}\r\n\r\nexport { getTimeString };","import { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getTimeString } from './util';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderTop: '1px solid #ccc',\r\n    },\r\n    rating: {\r\n        flex: '1 0 6ch',\r\n        textAlign: 'center',\r\n    },\r\n    container: {\r\n        flex: '1 1 100%',\r\n        marginLeft: theme.spacing(2),\r\n    },\r\n    title: {\r\n        textDecoration: 'none',\r\n    },\r\n    tag: {\r\n        margin: '6px 0',\r\n    },\r\n    tagBtn: {\r\n        fontSize: '0.6rem',\r\n        padding: '3px 7px',\r\n        marginRight: theme.spacing(0.6),\r\n    }\r\n}));\r\n\r\nexport default function PostListItem({ content }) {\r\n\r\n    const [isHovered, setHovered] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <ListItem className={classes.root}>\r\n                <ListItemText className={classes.rating} primary={content.rating} />\r\n                <div className={classes.container}>\r\n                    <ListItemText \r\n                        className={classes.post} primary={\r\n                            (<Link className={classes.title} to={'/posts/'+content?._id}>{content?.title}</Link>)\r\n                        }\r\n                        secondary={'by ' + content.author.displayName + '. Updated at ' + getTimeString(content.updatedAt, !isHovered)}\r\n                        onMouseEnter={(e)=>{setHovered(true)}}\r\n                        onMouseLeave={(e)=>{setHovered(false)}}\r\n                        onMouseDown={(e)=>{setHovered(!isHovered)}}\r\n                    />\r\n                    <div className={classes.tag}>\r\n                        {content.tags?.map((v, i) => {\r\n                            return (\r\n                                <Button\r\n                                    key={'pli-tgs-'+content?.id+'-'+i}\r\n                                    variant='outlined'\r\n                                    className={classes.tagBtn}\r\n                                    component={Link} to={'/tags/'+v}\r\n                                >{v}</Button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        </>\r\n    );\r\n}","import { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\nexport const EditTags = ({ tags, setTags }) => {\r\n    const [inputVisible, setInputVisible] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [editInputIndex, setEditInputIndex] = useState(-1);\r\n    const [editInputValue, setEditInputValue] = useState('');\r\n    const input = useRef(null);\r\n    const editInput = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(inputVisible) input.current.focus();\r\n    }, [inputVisible]);\r\n\r\n    useEffect(() => {\r\n        if(editInputIndex !== -1) editInput.current.focus();\r\n    }, [editInputIndex]);\r\n\r\n    const handleClose = removedTag => {\r\n        const newTags = tags.filter(tag => tag !== removedTag);\r\n        // console.log(newTags);\r\n        setTags(newTags);\r\n    };\r\n    \r\n    const showInput = () => {\r\n        setInputVisible(true);\r\n    };\r\n    \r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    \r\n    const handleInputConfirm = () => {\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n            tags = [...tags, inputValue];\r\n        }\r\n        // console.log(tags);\r\n        setTags(tags);\r\n        setInputVisible(false);\r\n        setInputValue('');\r\n    };\r\n    \r\n    const handleEditInputChange = e => {\r\n        setEditInputValue(e.target.value);\r\n    };\r\n    \r\n    const handleEditInputConfirm = () => {\r\n        const newTags = [...tags];\r\n        newTags[editInputIndex] = editInputValue;\r\n        setTags(newTags);\r\n        setEditInputIndex(-1);\r\n        setEditInputValue('');\r\n    };\r\n    \r\n    const saveInputRef = i => {\r\n        input.current = i;\r\n    };\r\n    \r\n    const saveEditInputRef = i => {\r\n        editInput.current = i;\r\n    };\r\n    \r\n    return (\r\n        <>\r\n        {tags?.map((tag, index) => {\r\n            if (editInputIndex === index) {\r\n              return (\r\n                <Input\r\n                    ref={saveEditInputRef}\r\n                    key={tag}\r\n                    size=\"small\"\r\n                    className=\"tag-input\"\r\n                    value={editInputValue}\r\n                    onChange={handleEditInputChange}\r\n                    onBlur={handleEditInputConfirm}\r\n                    onPressEnter={handleEditInputConfirm}\r\n                />\r\n              );\r\n            }\r\n  \r\n            const isLongTag = tag.length > 20;\r\n  \r\n            const tagElem = (\r\n                <Tag\r\n                    className=\"edit-tag\"\r\n                    key={tag}\r\n                    closable={true}\r\n                    onClose={() => handleClose(tag)}\r\n                >\r\n                    <span\r\n                        onDoubleClick={e => {\r\n                            setEditInputValue(tag);\r\n                            setEditInputIndex(index);\r\n                            e.preventDefault();\r\n                        }}\r\n                    >\r\n                        {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                    </span>\r\n                </Tag>\r\n            );\r\n            return isLongTag ? (\r\n                <Tooltip title={tag} key={tag}>\r\n                    {tagElem}\r\n                </Tooltip>\r\n            ) : (\r\n                tagElem\r\n            );\r\n        })}\r\n        {inputVisible && (\r\n            <Input\r\n                ref={saveInputRef}\r\n                type=\"text\"\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                onBlur={handleInputConfirm}\r\n                onPressEnter={handleInputConfirm}\r\n            />\r\n        )}\r\n        {!inputVisible && (tags?.length < 3) && (\r\n            <Tag className=\"site-tag-plus\" onClick={showInput}>\r\n                <PlusOutlined /> New Tag\r\n            </Tag>\r\n        )}\r\n        </>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { TextField, Dialog, DialogTitle, DialogContent, makeStyles } from '@material-ui/core';\r\nimport { Typography, IconButton, Switch, FormControlLabel } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport { EditTags } from './EditTags';\r\nimport { Posts } from \"../../commons/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: '0',\r\n        width: '100%',\r\n        maxWidth: '750px',\r\n    },\r\n    dialogTitle: {\r\n        display: 'flex',\r\n    },\r\n    dialogTitleText: {\r\n        flex: '1 1 100%',\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    dialogContent: {\r\n        margin: '0 auto',\r\n        padding: theme.spacing(0, 2),\r\n    },\r\n    postTitle: {\r\n        width: '100%',\r\n    },\r\n    postContent: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    postTags: {\r\n        '& > div > .MuiInputBase-input': {\r\n            display: 'none',\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            padding: theme.spacing(2),\r\n        },\r\n        width: '100%',\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    preview: {\r\n        fontSize: '1.2em',\r\n        wordBreak: 'break-word',\r\n    },\r\n}));\r\n\r\n/*\r\n* post => title + content + tags\r\n* answer => content\r\n* add => submit\r\n* edit => delete + submit\r\n*/\r\n\r\nexport const EditPost = ({ isAdd, isPost, postId, post, open, setOpen, setReload }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [preview, setPreview] = useState(false);\r\n    const [tags, setTags] = useState([])\r\n    const [redirect, setRedirect] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if(post){\r\n            setTitle(post.title);\r\n            setContent(post.content);\r\n            setTags(post.tags);\r\n        }\r\n    }, [post]);\r\n\r\n    useEffect(() => {\r\n        if(isAdd){\r\n            setTitle('');\r\n            setContent('');\r\n            setTags([]);\r\n        }\r\n    }, [isAdd])\r\n\r\n    const handlePublish = async () => {\r\n        try{\r\n            if(isAdd){\r\n                if(isPost) await Posts.addPost(title, content, tags);\r\n                else await Posts.addAnswer(postId, content);\r\n            }\r\n            else{\r\n                if(isPost) await Posts.editPost(post._id, title, content, tags);\r\n                else await Posts.editAnswer(postId, post._id, content);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        setOpen(false);\r\n        setReload(true);\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            if(isPost) {\r\n                await Posts.deletePost(postId);\r\n                setRedirect(true);\r\n            }\r\n            // else await Posts.deleteAnswer(postId, post._id);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} maxWidth='md' classes={{ paper: classes.dialogWrapper }}>\r\n                <DialogTitle>\r\n                    <div className={classes.dialogTitle}>\r\n                        <IconButton onClick={() => {setOpen(false)}}>\r\n                            <ArrowBackIosIcon fontSize=\"small\"/>\r\n                        </IconButton>\r\n                        <Typography variant='h5' component='div' className={classes.dialogTitleText}>\r\n                            {isAdd && isPost && 'Add Post'}\r\n                            {isAdd && !isPost && 'Reply'}\r\n                            {!isAdd && isPost && 'Edit Post'}\r\n                            {!isAdd && !isPost && 'Edit Answer'}\r\n                        </Typography>\r\n                        {redirect && (\r\n                            <Redirect to='/posts'/>\r\n                        )}\r\n                        {!isAdd && (\r\n                            <IconButton onClick={handleDelete}>\r\n                                <DeleteIcon/>\r\n                            </IconButton>\r\n                        )}\r\n                        <IconButton onClick={handlePublish}>\r\n                            <PublishIcon/>\r\n                        </IconButton>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className={classes.dialogContent}>\r\n                        {isPost && (\r\n                            <TextField \r\n                                value={title}\r\n                                label='Title'\r\n                                variant='outlined'\r\n                                className={classes.postTitle}\r\n                                onChange={(e) => setTitle(e.target.value)}/>\r\n                        )}\r\n                        <TextField \r\n                            value={content}\r\n                            label='Content'\r\n                            variant='outlined'\r\n                            multiline\r\n                            rows={10}\r\n                            className={isPost ? classes.postContent : classes.postTitle}\r\n                            onChange={(e) => setContent(e.target.value)}/>\r\n                        {isPost && (\r\n                            <TextField \r\n                                value=' '\r\n                                label='Tags'\r\n                                variant='outlined'\r\n                                InputProps={{ startAdornment: <EditTags tags={tags} setTags={setTags}/>}}\r\n                                className={classes.postTags}/>\r\n                        )}\r\n                        <FormControlLabel\r\n                            control={<Switch checked={preview} onChange={e => setPreview(!preview)}/>}\r\n                            label=\"Preview\"\r\n                        />\r\n                        <div className={classes.preview}>\r\n                            {preview ? (\r\n                                <ReactMarkdown remarkPlugins={[gfm]} children={content}></ReactMarkdown>\r\n                            ) : []}\r\n                        </div>\r\n                        \r\n\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Posts } from \"../../commons/api\";\r\nimport PostListItem from './PostListItem';\r\nimport { EditPost } from './EditPost';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, List, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n// import { postitems } from '../tests/Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: '20px',\r\n  },\r\n  max: {\r\n    width: '100%',\r\n    maxWidth: '750px',\r\n    margin: '0 auto',\r\n  },\r\n  title: {\r\n    display: 'flex',\r\n  },\r\n  text: {\r\n    padding: theme.spacing(1,2),\r\n    flex: '1 1 100%',\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport const PostList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const fetch = () => {\r\n    Posts.getPosts().then(setPosts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n    if(reload) setReload(false);\r\n  }, [reload]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EditPost\r\n        isAdd={true} isPost={true} open={openEdit}\r\n        setOpen={setOpenEdit} setReload={setReload}/>\r\n      <div className={classes.max}>\r\n        <div className={classes.title}>\r\n          <Typography className={classes.text} variant=\"h5\" display='inline'>\r\n            Post List\r\n          </Typography>\r\n          <IconButton\r\n            variant=\"contained\"\r\n            onClick={() => setOpenEdit(true)}\r\n            color='primary'>\r\n            <AddIcon/>\r\n          </IconButton>\r\n        </div>\r\n        <List className={classes.list}>\r\n          {posts.map((el, i) => (\r\n            <React.Fragment key={'pli-'+i}>\r\n              <PostListItem content={el}/>\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useAuth } from \"../../commons/auth\";\r\nimport { Sessions } from \"../../commons/api\";\r\nimport { Storage } from '../../commons/storage';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: 'calc(100vh - 64px)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  card: {\r\n    margin: 'auto',\r\n    maxWidth: '300px',\r\n    padding: theme.spacing(5, 3),\r\n  },\r\n  text: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  errtext: {\r\n    marginBottom: theme.spacing(2),\r\n    color: theme.palette.error.main,\r\n  },\r\n  btn: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport const Login = withRouter(({ history, location }) => {\r\n  const { setCurrentUser } = useAuth();\r\n  const referer = location?.state?.referer || '/posts';\r\n  const [username, setUsername] = useState('');\r\n  const [rawPassword, setRawPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const token = Storage.get('token');\r\n    if (token) {\r\n      const user = JSON.parse(Storage.get('user'));\r\n\r\n      setCurrentUser(user);\r\n\r\n      history.push(referer);\r\n    }\r\n  });\r\n\r\n  const onClick = async () => {\r\n    setMessage('');\r\n    try {\r\n      const { user, token } = await Sessions.newSession(username, rawPassword);\r\n\r\n      Storage.set('user', JSON.stringify(user));\r\n      Storage.set('token', token);\r\n      setCurrentUser(user);\r\n\r\n      history.push(referer);\r\n    } catch (e) {\r\n      // maybe wrong username or password or something\r\n      setMessage('Username or password invalid.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Paper variant='outlined' className={classes.card}>\r\n        <Typography variant='h4' className={classes.text}>登入</Typography>\r\n        <Typography variant='h6' className={classes.text}>輸入使用者資訊以繼續使用</Typography>\r\n        <TextField\r\n          variant='outlined'\r\n          className={ classes.text }\r\n          label={ 'Username' }\r\n          value={ username }\r\n          onChange={(e) => setUsername(e.target.value)}/>\r\n        <TextField\r\n          variant='outlined'\r\n          className={ classes.text }\r\n          label={ 'Password' }\r\n          value={ rawPassword }\r\n          type='password'\r\n          onChange={(e) => setRawPassword(e.target.value)}/>\r\n        <Typography variant='body1' className={classes.errtext}>{message}</Typography>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          className={ classes.btn }\r\n          onClick={ onClick } > LOGIN </Button>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n});","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton, InputBase } from '@material-ui/core';\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { getTimeString } from './util'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderTop: '1px solid #ccc',\r\n        marginTop: theme.spacing(3),\r\n        fontSize: '1.2em',\r\n    },\r\n    split: {\r\n        display: 'flex',\r\n    },\r\n    sidebar: {\r\n        width: '48px',\r\n    },\r\n    rating: {\r\n        textAlign: 'center',\r\n    },\r\n    content: {\r\n        flex: '1 1 100%',\r\n        minWidth: '0',\r\n        margin: theme.spacing(2),\r\n    },\r\n    info: {\r\n        textAlign: 'right',\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n    commentList:{\r\n        borderTop: '1px solid #ccc',\r\n    },\r\n    comment: {\r\n        borderBottom: '1px solid #ddd',\r\n        padding: theme.spacing(0.5, 0, 1, 0),\r\n    },\r\n    user: {\r\n        textDecoration: 'none',\r\n        display: 'inline-block',\r\n    },\r\n    addComment: {\r\n        width: '100%',\r\n        '& :focus': {\r\n            borderBottom: '1px solid #ccc',\r\n        },\r\n    },\r\n}));\r\n\r\nexport const ReadPostItem = ({ post, handleEdit }) => {\r\n    const [comment, setComment] = useState('');\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.split}>\r\n                <div className={classes.sidebar}>\r\n                    <IconButton><ChangeHistoryIcon/></IconButton>\r\n                    <div className={classes.rating}>{post?.rating}</div>\r\n                    <IconButton><DetailsIcon/></IconButton>\r\n                    <IconButton onClick={handleEdit}><EditIcon/></IconButton>\r\n                </div>\r\n                <div className={classes.content}>\r\n                    <ReactMarkdown remarkPlugins={[gfm]} children={post?.content}></ReactMarkdown>\r\n                    <div className={classes.info}>\r\n                        {'by '}\r\n                        <Link className={classes.user} to={'/users/'+post?.author?._id}>{post?.author?.displayName}</Link>\r\n                        {'. Updated at ' + getTimeString(post?.updatedAt)}\r\n                    </div>\r\n                    <div className={classes.commentList}>\r\n                        {post?.comments?.map(el =>(\r\n                            <div className={classes.comment}>\r\n                                <Link className={classes.user} to={'/users/'+el.author._id}>{el?.author?.displayName}</Link>\r\n                                {': '+el?.content}\r\n                            </div>\r\n                        ))}\r\n                        <InputBase\r\n                            multiline\r\n                            className={classes.addComment}\r\n                            placeholder='Add a comment...' value={comment}\r\n                            onChange={(e)=>setComment(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { Posts } from \"../../commons/api\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, IconButton, Typography } from '@material-ui/core/';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport { ReadPostItem } from './ReadPostItem';\r\nimport { EditPost } from './EditPost'\r\n// import { testanswer, testpost } from '../tests/Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(2),\r\n    },\r\n    container: {\r\n        maxWidth: '750px',\r\n        margin: '0 auto',\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n    },\r\n    postTitle: {\r\n        padding: theme.spacing(1, 0),\r\n        flex: '1 1 100%',\r\n    },\r\n    content: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport const ReadPost = () => {\r\n    const [post, setPost] = useState(null);\r\n    const [ans, setAns] = useState(null);\r\n    const [openEdit, setOpenEdit] = useState(false);\r\n    const [editPost, setEditPost] = useState(null);\r\n    const [isPost, setIsPost] = useState(false);\r\n    const [isAdd, setIsAdd] = useState(false);\r\n    const [reload, setReload] = useState(false);\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        Posts.getPost(id)\r\n        .then(res => {\r\n            setPost(res);\r\n            setAns(res.answers);\r\n        })\r\n        .catch(() => {\r\n            // TODO: post not found or cant see.\r\n        });\r\n        // setPost(testpost);\r\n        // setAns(testanswer);\r\n        if(reload) setReload(false);\r\n    }, [id, reload])\r\n\r\n    const handleOpenEdit = (e,index,add=false) => {\r\n        // TODO: check if the user is admin or author\r\n        if(add){\r\n            // reply\r\n            setIsAdd(true);\r\n            setIsPost(false);\r\n            setEditPost(null);\r\n        }\r\n        else if(index===-1){\r\n            // edit post\r\n            setIsAdd(false);\r\n            setIsPost(true);\r\n            setEditPost(post);\r\n        }\r\n        else{\r\n            // edit answer\r\n            setIsAdd(false);\r\n            setIsPost(false);\r\n            setEditPost(ans[index]);\r\n        }\r\n        setOpenEdit(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <EditPost\r\n                    isAdd={isAdd} isPost={isPost} postId={post?._id}\r\n                    post={editPost} open={openEdit} setOpen={setOpenEdit} setReload={setReload}/>\r\n                <div className={classes.container}>\r\n                    <div className={classes.header}>\r\n                        <IconButton component={Link} to='/posts'>\r\n                            <ArrowBackIosIcon/>\r\n                        </IconButton>\r\n                        <Typography variant='h5' className={classes.postTitle}>\r\n                            Posts\r\n                        </Typography>\r\n                        <IconButton onClick={e => handleOpenEdit(e,0,true)}>\r\n                            <ReplyIcon/>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.content}>\r\n                        <Typography variant='h4' className={classes.title}>{post?.title}</Typography>\r\n                        <ReadPostItem post={post} handleEdit={e => handleOpenEdit(e,-1)}/>\r\n                        {ans?.map((el,i) =>(\r\n                            <ReadPostItem key={'rpi-'+i} post={el} handleEdit={e => handleOpenEdit(e,i)}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Storage } from '../../commons/storage';\r\nimport { useAuth } from \"../../commons/auth\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      textDecoration: 'none',\r\n    },\r\n    setSearch: {\r\n      color: 'inherit',\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      width: '100%',\r\n      margin: theme.spacing(0, 0, 1, 0),\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n      width: '100%',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      width: '100%',\r\n    },\r\n    login: {\r\n        color: 'inherit',\r\n    },\r\n}));\r\n\r\nexport default function Nav ({ user }) {\r\n    const { setCurrentUser } = useAuth();\r\n    const classes = useStyles();\r\n    const [search, setSearch] = useState(false);\r\n\r\n    const logout = () => {\r\n      Storage.set('token', '');\r\n      Storage.set('user', '');\r\n      setCurrentUser(null);\r\n      setSearch(false);\r\n    }\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography component={Link} to='/' className={classes.title} color='inherit' variant=\"h6\" noWrap>\r\n              Simple Forum\r\n            </Typography>\r\n            {\r\n              (user) ? (\r\n                <>\r\n                  <IconButton className={classes.setSearch} onClick={(e) => {setSearch(!search)}}>\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n                  <Button component={Link} to='/'\r\n                    onClick={logout}\r\n                    className={classes.login}>\r\n                      {user.username}\r\n                  </Button>\r\n                </>\r\n              ) : []\r\n            }\r\n            </Toolbar>\r\n            {\r\n              (search) ? [(\r\n                <Toolbar key={'nav-srchbar'}>\r\n                  <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                      <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      autoFocus\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      onBlur={() => setSearch(false)}\r\n                      inputProps={{ 'aria-label': 'search' }}\r\n                    />\r\n                  </div>\r\n                </Toolbar>\r\n              )] : []\r\n            }\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }","import { useState } from 'react';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../commons/auth/index';\r\nimport PrivateRoute from '../commons/auth/PrivateRoute';\r\nimport { PostList } from './PostList/PostList';\r\nimport { Login } from './Login/Login'\r\nimport { ReadPost } from './PostList/ReadPost'\r\nimport Nav from './Components/Nav';\r\nimport './App.css';\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  \r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, setCurrentUser }}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Nav user={currentUser}/>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Login} />\r\n            <PrivateRoute path=\"/posts\" exact component={PostList} />\r\n            <PrivateRoute path=\"/posts/:id\" component={ReadPost} />\r\n            <Route path=\"*\">\r\n              <Redirect to=\"/\" />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}